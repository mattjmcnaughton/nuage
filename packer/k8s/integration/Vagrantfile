# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "../output-vagrant/package.box"

  # Assume tne `/vagrant` is bound.

  $master_script = <<-M_SCRIPT
  export KUBEADM_IP_ADVERTISE=192.168.3.2
  sudo -E /usr/local/bin/kubeadm-init.sh

  sudo cp /etc/kubernetes/admin.conf /vagrant/
  M_SCRIPT

  $worker_script = <<-W_SCRIPT
  export KUBEADM_DISCOVERY_FILE=/vagrant/admin.conf

  sudo -E /usr/local/bin/kubeadm-join.sh
  W_SCRIPT

  $tester_script = <<-T_SCRIPT
  mkdir -p ~/.kube
  cp /vagrant/admin.conf ~/.kube/config
  sudo chown $(id -u):$(id -g) ~/.kube/config

  kubectl --insecure-skip-tls-verify get nodes
  kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml
  sleep 10
  kubectl get nodes
  kubectl apply -f https://k8s.io/examples/application/deployment.yaml
  kubectl get deployment
  T_SCRIPT


  boxes = [
    { name: "master", ip: "192.168.3.2", script: $master_script },
    { name: "worker", ip: "192.168.3.3", script: $worker_script },
    { name: "tester", ip: "192.168.3.4", script: $tester_script }
  ]

  # Will create sequentially.
  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = opts[:name]
      config.vm.network :private_network, ip: opts[:ip]
      config.vm.provision "shell", inline: opts[:script]
    end
  end
end
